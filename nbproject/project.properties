annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
auxiliary.org-netbeans-spi-editor-hints-projects.perProjectHintSettingsFile=nbproject/cfg_hints.xml
endorsed.classpath=
#Tue Dec 11 15:30:52 BRST 2018
excludes=
jar.archive.disabled=${jnlp.enabled}
jar.index=${jnlp.enabled}
javac.external.vm=false
javac.processorpath=\
    ${javac.classpath}
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit_4.classpath}:\
    ${libs.hamcrest.classpath}
javadoc.html5=false
jlink.launcher=false
jlink.launcher.name=DirSynch
jnlp.descriptor=application
jnlp.mixed.code=default
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
# Optional override of default Application-Library-Allowable-Codebase attribute identifying the locations where your signed RIA is expected to be found.
manifest.custom.application.library.allowable.codebase=
# Optional override of default Caller-Allowable-Codebase attribute identifying the domains from which JavaScript code can make calls to your RIA without security prompts.
manifest.custom.caller.allowable.codebase=
# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed
manifest.custom.codebase=
# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)
manifest.custom.permissions=
mkdist.disabled=false
project.license=gpl30
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
dist.javadoc.dir=${dist.dir}/javadoc
jnlp.offline-allowed=false
test.src.dir=test
run.modulepath=\
    ${javac.modulepath}
jnlp.codebase.type=local
build.sysclasspath=ignore
debug.modulepath=${run.modulepath}
javac.compilerargs=-Xlint\:unchecked
javadoc.noindex=false
javadoc.private=false
javadoc.author=false
jnlp.codebase.url=file\:/D\:/home/itamar/devel/dirsynch/dist/
main.class=itamar.dirsynch.MainJFrame
junit.selected.version=3
javac.source=1.8
includes=**
javadoc.use=true
jar.compress=true
javadoc.nonavbar=false
javadoc.notree=false
application.homepage=https://itamarc.github.io/dirsynch/
javac.deprecation=true
application.vendor=Itamar Carvalho
javadoc.additionalparam=
jnlp.signed=false
build.generated.sources.dir=${build.dir}/generated-sources
javadoc.splitindex=true
javac.processormodulepath=
run.jvmargs=
javadoc.encoding=
javac.classpath=
run.test.modulepath=\
    ${javac.test.modulepath}
build.classes.excludes=**/*.java,**/*.form
dist.jar=${dist.dir}/DirSynch.jar
build.classes.dir=${build.dir}/classes
debug.test.modulepath=${run.test.modulepath}
build.test.classes.dir=${build.dir}/test/classes
javadoc.windowtitle=
build.test.results.dir=${build.dir}/test/results
jnlp.enabled=false
dist.dir=dist
build.dir=build
build.generated.dir=${build.dir}/generated
javadoc.version=false
application.args=
application.title=DirSynch
javac.test.modulepath=\
    ${javac.modulepath}
debug.test.classpath=${run.test.classpath}
javac.target=1.8
platform.active=default_platform
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
javac.modulepath=
src.dir=src
debug.classpath=${run.classpath}
